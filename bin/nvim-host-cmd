#!/usr/bin/env python
# pylint: disable=invalid-name
"""Allows control of the neovim host from within a neovim terminal."""
from __future__ import print_function

import os
import sys

from pynvim import attach
from pynvim import NvimError


def _print_help():
    print("Usage: {} <nvim-command>".format(os.path.basename(sys.argv[0])))


def main():  # pylint: disable=missing-docstring
    if len(sys.argv) == 1 or sys.argv[1] in ["--help", "-h"]:
        _print_help()
        sys.exit(1)

    addr = os.environ.get("NVIM_LISTEN_ADDRESS", None)
    if addr is None:
        print("Couldn't read variable $NVIM_LISTEN_ADDRESS", file=sys.stderr)
        return 1

    nvim = attach('socket', path=addr)

    # Join all arguments into a single, space-separated string. This allows for
    # invocations like: nvim-host-cmd "map a" b.
    try:
        nvim.command(" ".join(sys.argv[1:]))
    except NvimError as nve:
        print(nve.args[0].decode('utf-8'), file=sys.stderr)
        return 1

    return 0


if __name__ == "__main__":
    sys.exit(main())
