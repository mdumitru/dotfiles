# Source 'before' file (if any).
if test -f "$HOME/.aliases.before" -a -r "$HOME/.aliases.before"; then
    . "$HOME/.aliases.before"
fi


alias l='ls -lFh'
alias la='ls -lAFh'
alias ll='ls -l'
alias lt='ls -ltFh'
alias ldot='ls -ld .*'

alias zshrc='$EDITOR ~/.zshrc'

alias grep='grep --color'

alias vp=vimpager
alias vc=vimcat

alias rg='rg --smart-case'

alias tj='kill -TERM %1'
alias kj='kill -KILL %1'

# The global ignore file should contain uninteresting things (e.g. ctags).
alias ag='ag --path-to-ignore ~/.ignore'

# Skip annoying intro banner.
alias gdb='gdb -q'

# Very succint pylint output (only errors, warnings and grade).
alias pyl='pylint --disable=RP0001 --disable=RP0002 --disable=RP0003 --disable=RP0101 --disable=RP0401 --disable=RP0701 --disable=RP0801'


remake() {
    make clean || return $?
    if test $# -eq 0; then
        make
    else
        make $@
    fi
}

weather() {
    curl -4 "http://wttr.in/$1"
}

# Ideally, whenver an interactive python session is wanted, this should invoke
# bpython and the regular interpreter otherwise (bpython seems to sometimes
# break when non-interactive).
_py() {
    suffix=$1
    if test $# -ne 0; then
        shift
    fi

    # Consider all invocations with no arguments as interactive.
    if test $# -eq 0; then
        python$suffix -m bpython
    else
        python$suffix $@
    fi
}

# An array would be nice.
set "" 2 3
for suffix; do
    if python$suffix -m bpython -c "" &>/dev/null; then
        alias py$suffix="_py \"$suffix\""
    else
        if command -v python$suffix > /dev/null; then
            alias py$suffix=python$suffix
        fi
    fi
done
set --


# Interaction with neovim when running from its guest terminal.
if command -v nvim > /dev/null; then
    if test -n "$NVIM_LISTEN_ADDRESS" -a -w "$NVIM_LISTEN_ADDRESS" && \
        command -v nvim-host-cmd > /dev/null;
    then
        nvim_cd() {
            nvim-host-cmd "execute \"lcd\" fnameescape(\"$(pwd)\") | file term:$$:$(pwd)/$(basename $SHELL)"
        }

        alias v=nvim-host-cmd
        alias e='nvim-host-cmd edit'
        alias tabe='nvim-host-cmd tabedit'
        alias sp='nvim-host-cmd split'
        alias vsp='nvim-host-cmd vsplit'
        alias bo='nvim-host-cmd botright'
        alias to='nvim-host-cmd topleft'
    fi
fi


# Source 'after' file (if any).
if test -f "$HOME/.aliases.after" -a -r "$HOME/.aliases.after"; then
    . "$HOME/.aliases.after"
fi
